import { BooleanChangedFieldViewModel } from './booleanChangedFieldViewModel';
import { BooleanNullableChangedFieldViewModel } from './booleanNullableChangedFieldViewModel';
import { CustomAttributeChangeModel } from './customAttributeChangeModel';
import { PeriodViewModelChangedFieldViewModel } from './periodViewModelChangedFieldViewModel';
import { StringArrayChangedFieldViewModel } from './stringArrayChangedFieldViewModel';
import { StringChangedFieldViewModel } from './stringChangedFieldViewModel';
import { StringChangedFieldWithDiffsViewModel } from './stringChangedFieldWithDiffsViewModel';
import { TestPointChangeViewModelChangedFieldViewModel } from './testPointChangeViewModelChangedFieldViewModel';
import { TestResultChangeViewModelChangedFieldViewModel } from './testResultChangeViewModelChangedFieldViewModel';
import { TestSuiteChangeViewModelChangedFieldViewModel } from './testSuiteChangeViewModelChangedFieldViewModel';
export declare class TestPlanChangedFieldsViewModel {
    'name'?: StringChangedFieldWithDiffsViewModel | null;
    'description'?: StringChangedFieldWithDiffsViewModel | null;
    'productName'?: StringChangedFieldViewModel | null;
    'build'?: StringChangedFieldViewModel | null;
    'period'?: PeriodViewModelChangedFieldViewModel | null;
    'status'?: StringChangedFieldViewModel | null;
    'tags'?: StringArrayChangedFieldViewModel | null;
    'testSuite'?: TestSuiteChangeViewModelChangedFieldViewModel | null;
    'testPoints'?: TestPointChangeViewModelChangedFieldViewModel | null;
    'testResults'?: TestResultChangeViewModelChangedFieldViewModel | null;
    'locking'?: BooleanChangedFieldViewModel | null;
    'hasAutomaticDurationTimer'?: BooleanNullableChangedFieldViewModel | null;
    'attributes'?: {
        [key: string]: CustomAttributeChangeModel;
    } | null;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
