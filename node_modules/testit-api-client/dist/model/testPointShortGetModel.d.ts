import { LastTestResultModel } from './lastTestResultModel';
import { TestPointStatus } from './testPointStatus';
import { WorkItemPriorityModel } from './workItemPriorityModel';
import { WorkItemState } from './workItemState';
export declare class TestPointShortGetModel {
    'id': string;
    'createdDate': Date;
    'createdById': string;
    'modifiedDate'?: Date | null;
    'modifiedById'?: string | null;
    'testerId'?: string | null;
    'parameters'?: {
        [key: string]: string;
    } | null;
    'attributes': {
        [key: string]: any;
    };
    'tags': Array<string>;
    'links': Array<string>;
    'testSuiteId': string;
    'testSuiteName': string;
    'workItemId': string;
    'workItemGlobalId': number;
    'workItemVersionId': string;
    'workItemVersionNumber': number;
    'workItemMedianDuration'?: number | null;
    'status': TestPointStatus;
    'priority': WorkItemPriorityModel;
    'isAutomated': boolean;
    'name': string;
    'configurationId': string;
    'duration': number;
    'sectionId': string;
    'sectionName'?: string | null;
    'projectId': string;
    'lastTestResult': LastTestResultModel;
    'iterationId': string;
    'workItemState': WorkItemState;
    'workItemCreatedById': string;
    'workItemCreatedDate': Date;
    'workItemModifiedById'?: string | null;
    'workItemModifiedDate'?: Date | null;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
export declare namespace TestPointShortGetModel {
}
