"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AutotestConverter = void 0;
const common_1 = require("../../common");
class AutotestConverter extends common_1.BaseConverter {
    constructor(config) {
        super(config);
    }
    toOriginAutotest(autotest) {
        return Object.assign(Object.assign({}, autotest), { projectId: this.config.projectId, links: Array.isArray(autotest.links) ? autotest.links.map((link) => this.toOriginLink(link)) : undefined, shouldCreateWorkItem: this.config.automaticCreationTestCases });
    }
    toLocalAutotest(autotest) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        return {
            id: autotest.id,
            name: (_a = autotest.name) !== null && _a !== void 0 ? _a : undefined,
            externalId: (_b = autotest.externalId) !== null && _b !== void 0 ? _b : undefined,
            links: (_c = autotest.links) === null || _c === void 0 ? void 0 : _c.map((link) => this.toLocalLink(link)),
            namespace: (_d = autotest.namespace) !== null && _d !== void 0 ? _d : undefined,
            classname: (_e = autotest.classname) !== null && _e !== void 0 ? _e : undefined,
            steps: (_f = autotest.steps) === null || _f === void 0 ? void 0 : _f.map((step) => this.toLocalShortStep(step)),
            setup: (_g = autotest.setup) === null || _g === void 0 ? void 0 : _g.map((step) => this.toLocalShortStep(step)),
            teardown: (_h = autotest.teardown) === null || _h === void 0 ? void 0 : _h.map((step) => this.toLocalShortStep(step)),
            labels: (_j = autotest.labels) !== null && _j !== void 0 ? _j : undefined,
        };
    }
}
exports.AutotestConverter = AutotestConverter;
