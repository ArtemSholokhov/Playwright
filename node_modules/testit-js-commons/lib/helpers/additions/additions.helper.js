"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Additions = void 0;
class Additions {
    constructor(client) {
        this.client = client;
        this.links = [];
        this.attachments = [];
        this.messages = [];
    }
    addAttachments(pathsOrContent, fileName) {
        return __awaiter(this, void 0, void 0, function* () {
            const ids = Array.isArray(pathsOrContent)
                ? yield this.client.attachments.uploadAttachments(pathsOrContent)
                : yield this.client.attachments.uploadTextAttachment(pathsOrContent, fileName);
            this.attachments.push(...ids);
            return ids;
        });
    }
    addLinks(links) {
        Array.isArray(links) ? this.links.push(...links) : this.links.push(links);
    }
    addMessage(message) {
        this.messages.push(message);
    }
    clear() {
        this.attachments = [];
        this.messages = [];
        this.links = [];
    }
}
exports.Additions = Additions;
