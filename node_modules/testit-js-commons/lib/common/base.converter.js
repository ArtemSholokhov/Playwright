"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseConverter = void 0;
const testit_api_client_1 = require("testit-api-client");
class BaseConverter {
    constructor(config) {
        this.config = config;
    }
    toOriginOutcome(outcome) {
        return testit_api_client_1.AvailableTestResultOutcome[outcome];
    }
    toLocalOutcome(outcome) {
        return testit_api_client_1.AvailableTestResultOutcome[outcome];
    }
    toOriginLinkType(linkType) {
        return testit_api_client_1.LinkType[linkType];
    }
    toLocalLinkType(linkType) {
        return testit_api_client_1.LinkType[linkType];
    }
    toOriginLink(link) {
        return Object.assign(Object.assign({}, link), { type: link.type ? this.toOriginLinkType(link.type) : undefined, hasInfo: true });
    }
    toLocalLink(link) {
        var _a, _b;
        return {
            url: link.url,
            title: (_a = link.title) !== null && _a !== void 0 ? _a : link.url,
            description: (_b = link.description) !== null && _b !== void 0 ? _b : undefined,
            type: link.type ? this.toLocalLinkType(link.type) : undefined,
        };
    }
    toLocalShortStep(step) {
        var _a, _b;
        return {
            title: step.title,
            description: (_a = step.description) !== null && _a !== void 0 ? _a : undefined,
            steps: (_b = step.steps) === null || _b === void 0 ? void 0 : _b.map((step) => this.toLocalShortStep(step)),
        };
    }
    toOriginStep(step) {
        var _a;
        return Object.assign(Object.assign({}, step), { outcome: step.outcome ? this.toOriginOutcome(step.outcome) : undefined, stepResults: (_a = step.steps) === null || _a === void 0 ? void 0 : _a.map((step) => this.toOriginStep(step)) });
    }
}
exports.BaseConverter = BaseConverter;
