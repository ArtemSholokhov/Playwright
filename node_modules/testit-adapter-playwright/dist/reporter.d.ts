import { FullConfig } from "@playwright/test";
import { Reporter, Suite, TestCase, TestResult, TestStep } from "@playwright/test/reporter";
import { IStrategy } from "testit-js-commons";
export type ReporterOptions = {
    detail?: boolean;
    outputFolder?: string;
    suiteTitle?: boolean;
    environmentInfo?: Record<string, string>;
};
declare class TmsReporter implements Reporter {
    config: FullConfig;
    suite: Suite;
    resultsDir: string;
    options: ReporterOptions;
    strategy: IStrategy;
    private readonly additions;
    private testCache;
    private stepCache;
    private attachmentSteps;
    private globalStartTime;
    private loadTestPromises;
    constructor(options: ReporterOptions);
    onBegin(config: FullConfig, suite: Suite): void;
    onTestBegin(test: TestCase): void;
    onTestEnd(test: TestCase, result: TestResult): void;
    onStepBegin(test: TestCase, _result: TestResult, step: TestStep): void;
    onEnd(): Promise<void>;
    addSkippedResults(): void;
    printsToStdio(): boolean;
    private getAutotestData;
    private loadTest;
}
export default TmsReporter;
export * from "./labels";
