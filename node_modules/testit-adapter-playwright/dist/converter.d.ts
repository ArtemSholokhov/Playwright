import { TestCase, TestStep, TestResult } from "@playwright/test/reporter";
import { TestStatus } from "@playwright/test";
import { AutotestPost, AutotestResult, ShortStep, Step, Attachment } from "testit-js-commons";
import { MetadataMessage } from "./labels";
declare enum Status {
    PASSED = "Passed",
    FAILED = "Failed",
    SKIPPED = "Skipped"
}
export declare class Converter {
    static convertTestCaseToAutotestPost(autotestData: MetadataMessage): AutotestPost;
    static convertAutotestPostToAutotestResult(autotestData: MetadataMessage, test: TestCase, result: TestResult): AutotestResult;
    static convertTestStepsToShortSteps(steps: TestStep[]): ShortStep[];
    static convertTestStepToShortStep(step: TestStep): ShortStep;
    static convertTestStepsToSteps(steps: TestStep[], attachmentsMap: Map<Attachment, TestStep>): Step[];
    static convertTestStepToStep(step: TestStep, attachmentsMap: Map<Attachment, TestStep>): Step;
    static convertStatus(status: TestStatus, expectedStatus: TestStatus): Status;
}
export type StatusDetails = {
    message?: string;
    trace?: string;
};
export declare const stripAscii: (str: string) => string;
export {};
